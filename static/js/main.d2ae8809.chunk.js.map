{"version":3,"sources":["logo.svg","Idb.js","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","App.js","index.js"],"names":["module","exports","db","Dexie","version","stores","products","addProduct","name","amount","purchaseDate","expireDate","a","img_url","undefined","add","toArray","then","arr","updateProductById","id","product","console","log","update","updated","getAllProducts","clearTable","tableName","table","clear","catch","deleteProductById","theId","where","equals","delete","err","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","maxWidth","deleteIcon","color","palette","primary","dark","dialogActions","paddingRight","paddingBottom","Transition","React","forwardRef","props","ref","Slide","direction","AppHeader","classes","useState","openDialog","setOpenDialog","AppBar","position","Toolbar","src","headerLogo","alt","className","Typography","variant","fontSize","onClick","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","refreshPage","ProductsList","handleListItemClick","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","alertOpen","alertText","this","push","to","toolbar","Collapse","in","Alert","severity","action","IconButton","aria-label","size","List","dense","list","map","listitemframe","key","ListItem","listitem","button","ListItemAvatar","Avatar","ListItemText","secondary","format","style","height","width","marginTop","backgroundColor","Component","withStyles","mixins","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","main","Scanner","onDetected","cameraStatus","useEffect","Quagga","init","config","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","lineWidth","codeResult","code","line","detected","AddProduct","componentDidMount","productID","find","e","product_name","product_amount","product_purchaseDate","product_expireDate","product_img_url","imgStyle","backgroundImage","handleCloseSnackbar","event","reason","openSnackbar","formatPurchaseDate","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","onSearchKeyDown","setBackgroundImg","setDate","handleClickUpdate","onStartScan","backgroundRepeat","backgroundPosition","backgroundSize","barcode","simple_popover_message","camera","message","keyCode","length","fetch","res","json","status","image_url","error","string","toISOString","split","date","isoDate","value","target","productUpdate","img","imgOverlay","edge","arrowIcon","formContainer","form","TextField","label","textField","onChange","onKeyDown","InputProps","endAdornment","InputAdornment","required","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","submitButton","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","marginLeft","right","float","typography","FloatingButton","Fab","fab","bottom","App","addDefaultProducts","today","moment","tomorrow","in1Week","addProductToList","deleteProduct","dateForAlarm","getDate","setHours","scheduleNotification","getTime","updateProduct","onNotificationClick","window","text","timestamp","Notification","permission","navigator","serviceWorker","ready","registration","prototype","showNotification","body","tag","icon","actions","showTrigger","TimestampTrigger","displayAlert","displayNotification","now","productListComponentRef","current","createRef","path","render","exact","notification","createMuiTheme","ReactDOM","StrictMode","document","getElementById","register","requestPermission","aElement","createElement","href","textContent","querySelector","appendChild"],"mappings":"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","file":"static/js/main.d2ae8809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a42da773.svg\";","import Dexie from 'dexie'\r\n\r\nconst db = new Dexie('Xpire');\r\ndb.version(1).stores({\r\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\r\n});\r\n\r\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url = undefined) => {\r\n    await db.products.add({\r\n        name: name,\r\n        amount: amount,\r\n        purchaseDate: purchaseDate,\r\n        expireDate: expireDate,\r\n        img_url: img_url\r\n    });\r\n    return await db.products.toArray().then(function (arr) {\r\n        return arr;\r\n    });\r\n}\r\nexport const updateProductById = async (id, product) => {\r\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\r\n    await db.products.update(id, product).then(function (updated) {\r\n        if (updated)\r\n            return getAllProducts();\r\n        else\r\n            console.log(\"Nothing was updated\");\r\n        return getAllProducts();\r\n    });\r\n}\r\n\r\nexport const clearTable = async (tableName) => {\r\n    await db.table(tableName).clear().catch(() => {\r\n        console.log('Error occured on table clear')\r\n    })\r\n}\r\n\r\nexport const deleteProductById = async (theId) => {\r\n    await db.products.where('id').equals(theId).delete()\r\n}\r\n\r\nexport const getProductById = async (id) => {\r\n    return await db.products.get(id).then(function (prod) {\r\n        return prod\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const getAllProducts = async () => {\r\n    return await db.products.toArray().then(function (arr) {\r\n        // console.log(arr);\r\n        return arr;\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const createDatabase = async () => { //use for debugging \r\n    const db = new Dexie('Xpire');\r\n    db.version(1).stores({\r\n        products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\r\n    });\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport headerLogo from '../logo.svg';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteOutlined';\r\nimport { clearTable } from '../Idb';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center'\r\n    },\r\n    logo: {\r\n        maxWidth: '2.5rem',\r\n    },\r\n    deleteIcon: {\r\n        color: theme.palette.primary.dark\r\n    },\r\n    dialogActions: {\r\n        paddingRight: \"16px\",\r\n        paddingBottom: \"10px\"\r\n    }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AppHeader(props) {\r\n    const classes = useStyles();\r\n    const [openDialog, setOpenDialog] = React.useState(false)\r\n\r\n    const handleDelete = () => {\r\n        clearTable('products')\r\n        setOpenDialog(false)\r\n        props.refreshPage()\r\n    }\r\n\r\n    const handleIconClick = () => {\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                <img src={headerLogo} alt=\"logo\" className={classes.logo} />\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Xpire\r\n                    </Typography>\r\n                <div>\r\n                    <DeleteForeverIcon\r\n                        className={classes.deleteIcon}\r\n                        fontSize='large'\r\n                        onClick={handleIconClick}\r\n                    />\r\n                </div>\r\n                <Dialog\r\n                    open={openDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={() => setOpenDialog(false)}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">Löschen bestätigen</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-slide-description\">\r\n                            Möchten Sie wirklich alle Produkte in Xpire löschen?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions className={classes.dialogActions}>\r\n                        <Button onClick={() => setOpenDialog(false)} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button onClick={handleDelete} color=\"secondary\">\r\n                            Löschen\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Redirect } from 'react-router';\r\nimport format from 'date-fns/format';\r\nimport { Collapse, IconButton } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    list: {\r\n        padding: '1rem',\r\n    },\r\n    listitemframe: {\r\n        margin: '0.6rem'\r\n    },\r\n    listitem: {\r\n        borderWidth: '0.1rem',\r\n        borderStyle: 'solid',\r\n        borderRadius: '0.5rem',\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nclass ProductsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleListItemClick = this.handleListItemClick.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n            alertOpen: false,\r\n            alertText: \"\"\r\n        }    \r\n    }\r\n\r\n    handleListItemClick = (id) => {\r\n        this.setState({redirect: true});\r\n        this.props.showProduct(id);\r\n    }\r\n\r\n    statusColor = (validDate) => {\r\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\r\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \r\n        \r\n        if (bestBeforeDayCount > 3) {\r\n            return '#C9DEBC';\r\n        } else if (bestBeforeDayCount > 0) {\r\n            return '#F4E132';\r\n        } else {\r\n            return '#F96523';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire/Product\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.toolbar}/>\r\n\r\n                <Collapse in={this.state.alertOpen}>\r\n                    <Alert\r\n                        severity=\"error\"\r\n                        action={\r\n                        <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={() => {this.setState({ alertOpen: false });}} >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.state.alertText}\r\n                    </Alert>\r\n                </Collapse>\r\n\r\n                <List dense className={classes.list}>\r\n                    {this.props.products ? this.props.products.map((product) =>\r\n                        <div className={classes.listitemframe} key={product.id}>\r\n                            <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        alt={`Avatar n°${product + 1}`}\r\n                                        src={product.img_url}\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={`${product.name} (${product.amount})`} secondary={\r\n                                    <div>\r\n                                        <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\r\n                                        <div style={{\r\n                                            height: '0.5rem',\r\n                                            width: '100%',\r\n                                            marginTop: '0.3rem',\r\n                                            backgroundColor: this.statusColor(product.expireDate),\r\n                                        }}></div>\r\n                                </div>\r\n                                }/>\r\n                            </ListItem>\r\n                        </div>\r\n                    ) : null}\r\n                </List>\r\n                {/* <button onClick={this.props.notification}>Notify me!</button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n  var camera = props.cameraStatus;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n    Quagga.stop();\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect } from 'react-router';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport BarcodeIcon from '@material-ui/icons/CropFree';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n//import Paper from '@material-ui/core/Paper';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Scanner from \"./Scanner\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    imgOverlay: {\r\n        height: '100%',\r\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\r\n    },\r\n    arrowIcon: {\r\n        marginLeft: \"16px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\",\r\n        position: \"fixed\"\r\n    },\r\n    deleteIcon: {\r\n        marginRight: \"16px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\",\r\n        position: \"fixed\",\r\n        right: \"0\"\r\n    },\r\n    datePicker: {\r\n        width: '100%'\r\n    },\r\n    formContainer: {\r\n        //marginTop: \"208px\",\r\n        //backgroundColor: \"white\"\r\n    },\r\n    form: {\r\n        padding: '1.6rem'\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    submitButton: {\r\n        float: 'right',\r\n        marginTop: '1rem'\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formatPurchaseDate = this.formatPurchaseDate.bind(this);\r\n        this.handleClickArrow = this.handleClickArrow.bind(this);\r\n        this.handleClickDelete = this.handleClickDelete.bind(this);\r\n        this.handleClickSave = this.handleClickSave.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\r\n        this.onSearchKeyDown = this.onSearchKeyDown.bind(this);\r\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\r\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\r\n        this.setDate = this.setDate.bind(this);\r\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\r\n        this.onDetected = this.onDetected.bind(this);\r\n        this.onStartScan = this.onStartScan.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n            product_name: \"\",\r\n            product_amount: 1,\r\n            product_purchaseDate: [new Date()],\r\n            product_expireDate: null,\r\n            product_img_url: \"\",\r\n            imgStyle: {\r\n                //zIndex: \"-1\",\r\n                //width: \"100%\",\r\n                //position: \"fixed\",\r\n                height: '13rem',\r\n                backgroundImage: \"url(\" + this.props.products.img_url + \")\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"auto 100%\"\r\n            },\r\n            barcode: \"\",\r\n            openSnackbar: false,\r\n            simple_popover_message: \"\",\r\n            result: null,\r\n            camera: false,\r\n            message: \"\",\r\n            open: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.productID !== 0) {\r\n            var product = this.props.products.find(e => e.id === this.props.productID);\r\n            this.setState({\r\n                product_name: product.name,\r\n                product_amount: product.amount,\r\n                product_purchaseDate: product.purchaseDate,\r\n                product_expireDate: product.expireDate,\r\n                product_img_url: product.img_url,\r\n                imgStyle: {\r\n                    ...this.state.imgStyle,\r\n                    backgroundImage: \"url(\" + product.img_url + \")\",\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setBackgroundImg(product_img_url) {\r\n        this.setState({\r\n            imgStyle: {\r\n                ...this.state.imgStyle,\r\n                backgroundImage: \"url(\" + product_img_url + \")\",\r\n            },\r\n            product_img_url: product_img_url\r\n        })\r\n    }\r\n\r\n    handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ openSnackbar: false })\r\n    };\r\n\r\n    onSearchKeyDown(event){\r\n        if(event.keyCode === 13 || event.keyCode === 9){\r\n            this.getProductInformationByBarcode(this.state.barcode)\r\n        }\r\n    }\r\n\r\n    getProductInformationByBarcode(barcode) {\r\n        if (barcode) {\r\n            //check for valid barcode\r\n\r\n            //var searchResult = {};\r\n            if (barcode.length === 13 || barcode.length === 8) {\r\n                fetch(\"https://world.openfoodfacts.org/api/v0/product/\" + barcode + \".json\")\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            var product = result.product;\r\n                            //check if product found\r\n                            if (result.status === 1) {\r\n                                if (product.product_name) {\r\n                                    //this.props.update(product.product_name);\r\n                                    this.setState({\r\n                                        product_name: product.product_name,\r\n                                    })\r\n                                    this.setBackgroundImg(product.image_url);\r\n                                } else {\r\n                                    // throw error\r\n                                    this.setState({\r\n                                        openSnackbar: true,\r\n                                        message: \"Produktname nicht gefunden!\"\r\n                                    })\r\n                                }\r\n\r\n                            } else {\r\n                                // throw error\r\n                                this.setState({\r\n                                    openSnackbar: true,\r\n                                    message: \"Das Produkt exitiert nicht!\"\r\n                                })\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                openSnackbar: true,\r\n                                message: \"Prüfe deine Internetverbindung!\"\r\n                            })\r\n                        })\r\n            } else {\r\n                this.setState({\r\n                    openSnackbar: true,\r\n                    message: \"Barcode nicht korrekt!\"\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                openSnackbar: true,\r\n                message: \"Bitte Barcode eingeben!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClickArrow(event) {\r\n        this.setState({ redirect: true });\r\n        this.props.refreshPage();\r\n    }\r\n\r\n    handleClickDelete(event) {\r\n        this.props.delete(this.props.productID);\r\n        this.setState({ redirect: true });\r\n        this.props.refreshPage();\r\n    }\r\n\r\n    handleClickSave(event) {\r\n        if (!this.state.product_name || !this.state.product_amount || !this.state.product_expireDate || !this.state.product_purchaseDate) {\r\n            this.setState({ openSnackbar: true, message: \"Bitte die Pflichtfelder ausfüllen.\" })\r\n        } else {\r\n            if (this.props.productID === 0) {\r\n                this.state.product_purchaseDate = this.formatPurchaseDate(this.state.product_purchaseDate);\r\n                this.props.add(this.state.product_name, this.state.product_amount, this.state.product_purchaseDate, this.state.product_expireDate, this.state.product_img_url);\r\n            }\r\n            this.setState({ redirect: true });\r\n            this.props.refreshPage();\r\n        }\r\n    }\r\n\r\n    formatPurchaseDate(string) {\r\n        var date = new Date(string);\r\n        var isoDate = date.toISOString().split('T')[0];\r\n        return isoDate;\r\n    }\r\n\r\n    handleDateChange(event, id) {\r\n        this.setDate(event, id);\r\n    }\r\n\r\n    async setDate(date, id) {\r\n        const isoDate = date.toISOString().split('T')[0];\r\n        await this.setState({ [id]: isoDate });\r\n    }\r\n\r\n    handleInput(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.id]: value\r\n        })\r\n\r\n    }\r\n\r\n    handleClickUpdate(event) {\r\n        var product = {\r\n            name: this.state.product_name,\r\n            amount: this.state.product_amount,\r\n            purchaseDate: this.state.product_purchaseDate,\r\n            expireDate: this.state.product_expireDate\r\n        }\r\n        this.props.productUpdate(this.props.productID, product);\r\n        this.setState({ openSnackbar: true, message: \"Daten wurden geändert!\" })\r\n    }\r\n\r\n    onDetected(result) {\r\n        this.setState({\r\n            barcode: result,\r\n            camera: false,\r\n        })\r\n\r\n        this.getProductInformationByBarcode(this.state.barcode);\r\n    }\r\n\r\n    onStartScan(event) {\r\n        this.setState({\r\n            camera: !this.state.camera\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.toolbar} />\r\n                <div className={classes.img} style={this.state.imgStyle}>\r\n                    <div className={classes.imgOverlay}>\r\n                        <ArrowIcon\r\n                            edge=\"end\"\r\n                            className={classes.arrowIcon}\r\n                            onClick={this.handleClickArrow}\r\n                        />\r\n                        {this.props.productID !== 0 && <DeleteIcon\r\n                            edge=\"end\"\r\n                            className={classes.deleteIcon}\r\n                            onClick={this.handleClickDelete}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.formContainer}>\r\n                    <form className={classes.form}>\r\n                        {this.props.productID === 0 && <div>\r\n                            <TextField\r\n                                id=\"barcode\"\r\n                                label=\"Barcode\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                value={this.state.barcode}\r\n                                className={classes.textField}\r\n                                onChange={this.handleInput}\r\n                                onKeyDown={this.onSearchKeyDown}\r\n\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <BarcodeIcon\r\n                                                onClick={this.onStartScan}\r\n                                            />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n\r\n                            <div className=\"container\">\r\n                                {this.state.camera && <Scanner onDetected={this.onDetected} cameraStatus={this.state.camera} />}\r\n                            </div>\r\n\r\n                        </div>}\r\n\r\n                        <TextField\r\n                            required\r\n                            id=\"product_name\"\r\n                            label=\"Titel\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.product_name}\r\n                            className={classes.textField}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                        <br />\r\n                        <FormControl variant=\"outlined\" margin=\"dense\" required className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"product_amount\">Anzahl</InputLabel>\r\n                            <Select\r\n                                native\r\n                                value={this.state.product_amount}\r\n                                onChange={this.handleInput}\r\n                                label=\"Anzahl\"\r\n                                inputProps={{\r\n                                    name: 'Anzahl',\r\n                                    id: 'product_amount',\r\n                                }}\r\n                            >\r\n                                <option aria-label=\"None\" value={1}>1</option>\r\n                                <option value={2}>2</option>\r\n                                <option value={3}>3</option>\r\n                                <option value={4}>4</option>\r\n                                <option value={5}>5</option>\r\n                                <option value={6}>6</option>\r\n                                <option value={7}>7</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <DatePicker\r\n                                required\r\n                                id=\"product_purchaseDate\"\r\n                                label=\"Eingekauft am\"\r\n                                margin=\"dense\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"dd.MM.yyyy\"\r\n                                value={this.state.product_purchaseDate}\r\n                                className={classes.datePicker}\r\n                                onChange={(event) => this.handleDateChange(event, \"product_purchaseDate\")}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <DatePicker\r\n                                required\r\n                                id=\"product_expireDate\"\r\n                                label=\"Gültig bis\"\r\n                                margin=\"dense\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"dd.MM.yyyy\"\r\n                                value={this.state.product_expireDate}\r\n                                className={classes.datePicker}\r\n                                onChange={(event) => this.handleDateChange(event, \"product_expireDate\")}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n\r\n                        {this.props.productID === 0 && <Button\r\n                            id=\"SaveButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.handleClickSave}>\r\n                            Speichern\r\n                    </Button>}\r\n\r\n                        {this.props.productID !== 0 && <Button\r\n                            id=\"UpdateButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.handleClickUpdate}>\r\n                            Ändern\r\n                    </Button>}\r\n                    </form>\r\n                </div>\r\n\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    open={this.state.openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    message={this.state.message}\r\n                    action={\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleCloseSnackbar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddProduct);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(4),\r\n    },\r\n});\r\n\r\nclass FloatingButton extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Link to=\"/Xpire/Product\">\r\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FloatingButton);","import React from 'react';\r\n//import IdbTest from './IdbTest'\r\nimport AppHeader from './components/AppHeader'\r\nimport ProductsList from './components/ProductsList';\r\nimport AddProduct from './components/AddProduct';\r\nimport FloatingButton from './components/FloatingButton';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\r\nimport { Collapse, IconButton } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from 'moment';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.productListComponentRef = React.createRef()\r\n\r\n    this.state = {\r\n      products: [],\r\n      productID: 0,\r\n      open: true\r\n    }\r\n    this.showProduct = this.showProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n    this.addProductToList = this.addProductToList.bind(this);\r\n    this.updateProduct = this.updateProduct.bind(this);\r\n    this.refreshPage = this.refreshPage.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const fetch = async () => {\r\n      await getAllProducts().then((arr) => {\r\n        if (arr.length === 0) {\r\n          addDefaultProducts()\r\n        }\r\n        this.setState({ products: arr });\r\n      })\r\n    }\r\n\r\n    const addDefaultProducts = async () => {\r\n      let today = moment().format('YYYY-MM-DD')\r\n      let tomorrow = moment().add(1, 'days').format('YYYY-MM-DD')\r\n      let in1Week = moment().add(7, 'days').format('YYYY-MM-DD')\r\n\r\n      console.log(today)\r\n      await this.addProductToList('Milch', 1, today, today)\r\n      await this.addProductToList('Eier', 1, today, tomorrow)\r\n      await this.addProductToList('Hopfensmoothie', 1, today, in1Week)\r\n    }\r\n\r\n    fetch();\r\n  }\r\n\r\n\r\n\r\n  refreshPage() {\r\n    this.setState({ productID: 0 });\r\n    this.componentDidMount();\r\n  }\r\n\r\n  showProduct(id) {\r\n    this.setState({ productID: id });\r\n  }\r\n\r\n  deleteProduct = async (id) => {\r\n    await deleteProductById(id)\r\n  }\r\n\r\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\r\n    let productID\r\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\r\n      this.setState({ products: arr });\r\n      productID = arr[arr.length - 1].id\r\n    })\r\n    console.log(\"Added Product with ID: \" + productID)\r\n    var dateForAlarm = new Date(expireDate)\r\n    dateForAlarm.setDate(dateForAlarm.getDate() - 1);\r\n    dateForAlarm.setHours(9, 0, 0, 0); // 9 o'clock on the day before expiration\r\n    this.scheduleNotification(name + \" läuft morgen ab!\", \"expireAlert:\" + productID, dateForAlarm.getTime());\r\n    console.log(\"scheduled for \" + dateForAlarm)\r\n  }\r\n\r\n  updateProduct = async (id, product) => {\r\n    await updateProductById(id, product).then((arr) => {\r\n      this.setState({ products: arr });\r\n    })\r\n  }\r\n  onNotificationClick = (event) => {\r\n    console.log(\"notification clicked\")\r\n    console.log(event)\r\n    window.open('http://www.mozilla.org', '_blank');\r\n  }\r\n  scheduleNotification = (text, id, timestamp) => {\r\n    if (Notification.permission === \"granted\") {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        if (\"showTrigger\" in Notification.prototype) { //origin trial feature\r\n          console.log(\"Notification Trigger feature supported\");\r\n          registration.showNotification('Xpire - manage your fridge and get rich', {\r\n            body: text,\r\n            tag: id,\r\n            icon: '/Xpire/static/media/logo.3fb9c233.svg',\r\n            actions: [\r\n              { action: 'show', title: 'Anzeigen' },\r\n              { action: 'remind', title: 'Erinnern' }\r\n            ], // TODO: event listener for onclick must be added somehow\r\n            showTrigger: new TimestampTrigger(timestamp) // eslint-disable-line no-undef\r\n          });\r\n        } else {\r\n          console.log(\"Notification Triggers not supported\")\r\n          registration.showNotification('Xpire - manage your fridge and get rich', {\r\n            body: 'Your Browser doesnt support scheduled notifications',\r\n            tag: 'no-support',\r\n            icon: 'logo.png'\r\n          });\r\n        }\r\n      })\r\n        .then(console.log(\"Notification sent\"))\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      this.displayAlert(\"Please allow Notifications or exit Incognito Mode\");\r\n    }\r\n  }\r\n  displayNotification = () => {\r\n    console.log(\"sending Notification\")\r\n    this.scheduleNotification(\"a product is about to expire\", \"test1\", Date.now() + 2000);\r\n    this.scheduleNotification(\"another schimmel\", \"test2\", Date.now() + 10000);\r\n  }\r\n\r\n  displayAlert = (text) => {\r\n    this.productListComponentRef.current.setState({\r\n      alertOpen: true,\r\n      alertText: text\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route path=\"/Xpire\" render={(props => <AppHeader refreshPage={this.refreshPage}></AppHeader>)} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList ref={this.productListComponentRef} products={this.state.products} showProduct={this.showProduct} notification={this.displayNotification} />} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\r\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct productID={this.state.productID}\r\n            products={this.state.products}\r\n            refreshPage={this.refreshPage}\r\n            add={this.addProductToList}\r\n            delete={this.deleteProduct}\r\n            productUpdate={this.updateProduct} />}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Color theme for whole app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n     primary: {\r\n        main: '#C9DEBC',\r\n     },\r\n     secondary: {\r\n       main: '#F96523',\r\n     },\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nif ('serviceWorker' in navigator && \"Notification\" in window) {\r\n  \r\n  navigator.serviceWorker.register('service-worker.js').then(function(registration) {\r\n    console.log(\"service worker registered\");\r\n    Notification.requestPermission(result => {\r\n      if (result === 'granted') {\r\n        console.log(\"Granted\")\r\n      } else {\r\n        console.log(result)\r\n      }\r\n    });\r\n  }).catch(function(error) {\r\n    console.log(error)\r\n  });\r\n} else {\r\n  // Der verwendete Browser unterstützt Service Worker nicht.\r\n  var aElement = document.createElement('a');\r\n  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';\r\n  aElement.textContent = 'unavailable';\r\n  document.querySelector('#status').appendChild(aElement);\r\n}"],"sourceRoot":""}