{"version":3,"sources":["logo.svg","Idb.js","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","App.js","index.js"],"names":["module","exports","db","Dexie","version","stores","products","addProduct","name","amount","purchaseDate","expireDate","a","img_url","undefined","add","toArray","then","arr","updateProductById","id","product","update","updated","console","log","getAllProducts","clearTable","tableName","table","clear","catch","deleteProductById","theId","where","equals","delete","err","Transition","React","forwardRef","props","ref","Slide","direction","AppHeader","handleDelete","setState","openDialog","refreshPage","setOpenDialog","openState","bind","state","classes","this","location","AppBar","position","Toolbar","src","headerLogo","alt","className","logo","Typography","variant","align","title","pathname","match","deleteIcon","fontSize","onClick","hiddenDiv","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","dialogActions","Button","color","Component","withRouter","withStyles","theme","root","flexGrow","menuButton","marginRight","spacing","maxWidth","palette","primary","dark","cursor","paddingRight","paddingBottom","width","ProductsList","handleListItemClick","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","alertOpen","alertText","push","to","toolbar","Collapse","in","Alert","severity","action","IconButton","aria-label","size","List","dense","list","map","listitemframe","key","ListItem","listitem","button","ListItemAvatar","Avatar","ListItemText","secondary","format","style","height","marginTop","backgroundColor","mixins","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","main","Scanner","onDetected","cameraStatus","useEffect","Quagga","init","config","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","lineWidth","codeResult","code","line","detected","AddProduct","componentDidMount","productID","find","e","product_name","product_amount","product_purchaseDate","product_expireDate","product_img_url","imgStyle","backgroundImage","handleCloseSnackbar","event","reason","openSnackbar","formatPurchaseDate","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","onSearchKeyDown","setBackgroundImg","handleClickUpdate","onStartScan","onFocusOut","backgroundRepeat","backgroundPosition","backgroundSize","barcode","camera","message","keyCode","length","fetch","res","json","status","image_url","string","toISOString","split","isoDate","value","target","productUpdate","img","imgOverlay","edge","arrowIcon","form","TextField","label","textField","onChange","onKeyDown","onBlur","InputProps","endAdornment","InputAdornment","barcodeIcon","required","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","submitButton","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","marginLeft","right","float","FloatingButton","Fab","fab","bottom","App","deleteProduct","addProductToList","dateForAlarm","setDate","getDate","setHours","scheduleNotification","getTime","updateProduct","text","timestamp","Notification","permission","navigator","serviceWorker","ready","registration","prototype","showNotification","body","tag","icon","actions","showTrigger","TimestampTrigger","displayAlert","productListComponentRef","current","createRef","path","render","exact","createMuiTheme","ReactDOM","StrictMode","document","getElementById","window","register","requestPermission","error","aElement","createElement","href","textContent","querySelector","appendChild"],"mappings":"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","file":"static/js/main.fbd21a15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a42da773.svg\";","import Dexie from 'dexie'\r\n\r\nconst db = new Dexie('Xpire');\r\ndb.version(1).stores({\r\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\r\n});\r\n\r\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url = undefined) => {\r\n    await db.products.add({\r\n        name: name,\r\n        amount: amount,\r\n        purchaseDate: purchaseDate,\r\n        expireDate: expireDate,\r\n        img_url: img_url\r\n    });\r\n    return await db.products.toArray().then(function (arr) {\r\n        return arr;\r\n    });\r\n}\r\nexport const updateProductById = async (id, product) => {\r\n    //product has to be one or multiple key(s) + value(s) according to database table attributes\r\n    await db.products.update(id, product).then(function (updated) {\r\n        if (updated)\r\n            return getAllProducts();\r\n        else\r\n            console.log(\"Nothing was updated\");\r\n        return getAllProducts();\r\n    });\r\n}\r\n\r\nexport const clearTable = async (tableName) => {\r\n    await db.table(tableName).clear().catch(() => {\r\n        console.log('Error occured on table clear')\r\n    })\r\n}\r\n\r\nexport const deleteProductById = async (theId) => {\r\n    await db.products.where('id').equals(theId).delete()\r\n}\r\n\r\nexport const getProductById = async (id) => {\r\n    return await db.products.get(id).then(function (prod) {\r\n        return prod\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const getAllProducts = async () => {\r\n    return await db.products.toArray().then(function (arr) {\r\n        return arr;\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const createDatabase = async () => { \r\n    //use for debugging \r\n    const db = new Dexie('Xpire');\r\n    db.version(1).stores({\r\n        products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\r\n    });\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport headerLogo from '../logo.svg';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteOutlined';\r\nimport { clearTable } from '../Idb';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { withRouter } from 'react-router-dom';   \r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    logo: {\r\n        maxWidth: '2.5rem',\r\n    },\r\n    deleteIcon: {\r\n        color: theme.palette.primary.dark,\r\n        cursor: \"pointer\"\r\n    },\r\n    dialogActions: {\r\n        paddingRight: \"20px\",\r\n        paddingBottom: \"10px\"\r\n    },\r\n    hiddenDiv: {\r\n        width: \"35px\"\r\n    }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nclass AppHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.setOpenDialog = this.setOpenDialog.bind(this);\r\n        this.state = {\r\n            openDialog: false,\r\n        }    \r\n    }\r\n\r\n    handleDelete = () => {\r\n        clearTable('products')\r\n        this.setState({openDialog: false});\r\n        this.props.refreshPage()\r\n    }\r\n\r\n    setOpenDialog = (openState) => {\r\n        this.setState({openDialog: openState});\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;       \r\n        const { location } = this.props;\r\n\r\n        return (\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <img src={headerLogo} alt=\"logo\" className={classes.logo} />\r\n                    <Typography variant=\"h6\" align=\"center\" className={classes.title}>\r\n                        Xpire\r\n                    </Typography>\r\n\r\n                    { !location.pathname.match(\"/Xpire/Product\") && <div>\r\n                        <DeleteForeverIcon\r\n                            className={classes.deleteIcon}\r\n                            fontSize='large'\r\n                            onClick={() => this.setOpenDialog(true)}\r\n                        />\r\n                    </div>}\r\n\r\n                    { location.pathname.match(\"/Xpire/Product\") && <div className={classes.hiddenDiv}></div>}\r\n\r\n                    <Dialog\r\n                        open={this.state.openDialog}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={() => this.setOpenDialog(false)}\r\n                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                        aria-describedby=\"alert-dialog-slide-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">Löschen bestätigen</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                Möchten Sie wirklich alle Produkte in Xpire löschen?\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions className={classes.dialogActions}>\r\n                            <Button onClick={() => this.setOpenDialog(false)} color=\"primary\">\r\n                                Abbrechen\r\n                            </Button>\r\n                            <Button onClick={() => this.handleDelete()} color=\"secondary\">\r\n                                Löschen\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\nexport default withRouter((withStyles(styles)(AppHeader)));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Redirect } from 'react-router';\r\nimport format from 'date-fns/format';\r\nimport { Collapse, IconButton } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    list: {\r\n        padding: '1rem',\r\n    },\r\n    listitemframe: {\r\n        margin: '0.6rem'\r\n    },\r\n    listitem: {\r\n        borderWidth: '0.1rem',\r\n        borderStyle: 'solid',\r\n        borderRadius: '0.5rem',\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nclass ProductsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleListItemClick = this.handleListItemClick.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n            alertOpen: false,\r\n            alertText: \"\"\r\n        }    \r\n    }\r\n\r\n    handleListItemClick = (id) => {\r\n        this.setState({redirect: true});\r\n        this.props.showProduct(id);\r\n    }\r\n\r\n    statusColor = (validDate) => {\r\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\r\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \r\n        \r\n        if (bestBeforeDayCount > 3) {\r\n            return '#C9DEBC';\r\n        } else if (bestBeforeDayCount > 0) {\r\n            return '#F4E132';\r\n        } else {\r\n            return '#F96523';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire/Product\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.toolbar}/>\r\n\r\n                <Collapse in={this.state.alertOpen}>\r\n                    <Alert\r\n                        severity=\"error\"\r\n                        action={\r\n                        <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={() => {this.setState({ alertOpen: false });}} >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                        }\r\n                    >\r\n                        {this.state.alertText}\r\n                    </Alert>\r\n                </Collapse>\r\n\r\n                <List dense className={classes.list}>\r\n                    {this.props.products ? this.props.products.map((product) =>\r\n                        <div className={classes.listitemframe} key={product.id}>\r\n                            <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        alt={`Avatar n°${product + 1}`}\r\n                                        src={product.img_url}\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={`${product.name} (${product.amount})`} secondary={\r\n                                    <div>\r\n                                        <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\r\n                                        <div style={{\r\n                                            height: '0.5rem',\r\n                                            width: '100%',\r\n                                            marginTop: '0.3rem',\r\n                                            backgroundColor: this.statusColor(product.expireDate),\r\n                                        }}></div>\r\n                                </div>\r\n                                }/>\r\n                            </ListItem>\r\n                        </div>\r\n                    ) : null}\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n  var camera = props.cameraStatus;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n    Quagga.stop();\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect } from 'react-router';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport BarcodeIcon from '@material-ui/icons/CropFree';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Scanner from \"./Scanner\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    imgOverlay: {\r\n        height: '100%',\r\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\r\n    },\r\n    arrowIcon: {\r\n        marginLeft: \"16px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\",\r\n        position: \"fixed\",\r\n        cursor: \"pointer\"\r\n    },\r\n    deleteIcon: {\r\n        marginRight: \"16px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\",\r\n        position: \"fixed\",\r\n        right: \"0\",\r\n        cursor: \"pointer\"\r\n    },\r\n    barcodeIcon: {\r\n        cursor: \"pointer\"\r\n    },\r\n    datePicker: {\r\n        width: '100%'\r\n    },\r\n    form: {\r\n        padding: '1.6rem'\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    submitButton: {\r\n        float: 'right',\r\n        marginTop: '1rem'\r\n    }\r\n});\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formatPurchaseDate = this.formatPurchaseDate.bind(this);\r\n        this.handleClickArrow = this.handleClickArrow.bind(this);\r\n        this.handleClickDelete = this.handleClickDelete.bind(this);\r\n        this.handleClickSave = this.handleClickSave.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\r\n        this.onSearchKeyDown = this.onSearchKeyDown.bind(this);\r\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\r\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\r\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\r\n        this.onDetected = this.onDetected.bind(this);\r\n        this.onStartScan = this.onStartScan.bind(this);\r\n        this.onFocusOut = this.onFocusOut.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n            product_name: \"\",\r\n            product_amount: 1,\r\n            product_purchaseDate: [new Date()],\r\n            product_expireDate: null,\r\n            product_img_url: \"\",\r\n            imgStyle: {\r\n                height: '13rem',\r\n                backgroundImage: \"url(\" + this.props.products.img_url + \")\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"auto 100%\"\r\n            },\r\n            barcode: \"\",\r\n            openSnackbar: false,\r\n            result: null,\r\n            camera: false,\r\n            message: \"\",\r\n            open: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.productID !== 0) {\r\n            var product = this.props.products.find(e => e.id === this.props.productID);\r\n            this.setState({\r\n                product_name: product.name,\r\n                product_amount: product.amount,\r\n                product_purchaseDate: product.purchaseDate,\r\n                product_expireDate: product.expireDate,\r\n                product_img_url: product.img_url,\r\n                imgStyle: {\r\n                    ...this.state.imgStyle,\r\n                    backgroundImage: \"url(\" + product.img_url + \")\",\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setBackgroundImg(product_img_url) {\r\n        this.setState({\r\n            imgStyle: {\r\n                ...this.state.imgStyle,\r\n                backgroundImage: \"url(\" + product_img_url + \")\",\r\n            },\r\n            product_img_url: product_img_url\r\n        })\r\n    }\r\n\r\n    handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        this.setState({ openSnackbar: false })\r\n    };\r\n\r\n    onSearchKeyDown(event){\r\n        if(event.keyCode === 13 || event.keyCode === 9){\r\n            this.getProductInformationByBarcode(this.state.barcode)\r\n        }\r\n    }\r\n\r\n    onFocusOut(){\r\n        if(this.state.barcode){\r\n            this.getProductInformationByBarcode(this.state.barcode)\r\n        }   \r\n    }\r\n\r\n    getProductInformationByBarcode(barcode) {\r\n        if (barcode) {\r\n            //check for valid barcode\r\n            if (barcode.length === 13 || barcode.length === 8) {\r\n                fetch(\"https://world.openfoodfacts.org/api/v0/product/\" + barcode + \".json\")\r\n                    .then(res => res.json())\r\n                    .then((result) => {\r\n                            var product = result.product;\r\n                            //check if product found\r\n                            if (result.status === 1) {\r\n                                if (product.product_name) {\r\n                                    this.setState({\r\n                                        product_name: product.product_name,\r\n                                    })\r\n                                    this.setBackgroundImg(product.image_url);\r\n                                } else {\r\n                                    // throw error\r\n                                    this.setState({\r\n                                        openSnackbar: true,\r\n                                        message: \"Produktname nicht gefunden!\"\r\n                                    })\r\n                                }\r\n\r\n                            } else {\r\n                                // throw error\r\n                                this.setState({\r\n                                    openSnackbar: true,\r\n                                    message: \"Das Produkt exitiert nicht!\"\r\n                                })\r\n                            }\r\n                        },\r\n                        () => {\r\n                            this.setState({\r\n                                openSnackbar: true,\r\n                                message: \"Prüfe deine Internetverbindung!\"\r\n                            })\r\n                        })\r\n            } else {\r\n                this.setState({\r\n                    openSnackbar: true,\r\n                    message: \"Barcode nicht korrekt!\"\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                openSnackbar: true,\r\n                message: \"Bitte Barcode eingeben!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClickArrow() {\r\n        this.setState({ redirect: true });\r\n        this.props.refreshPage();\r\n    }\r\n\r\n    handleClickDelete() {\r\n        this.props.delete(this.props.productID);\r\n        this.setState({ redirect: true });\r\n        this.props.refreshPage();\r\n    }\r\n\r\n    handleClickSave() {\r\n        //check if all mandatory fields are filled\r\n        if (!this.state.product_name || !this.state.product_amount || !this.state.product_expireDate || !this.state.product_purchaseDate) {\r\n            this.setState({ openSnackbar: true, message: \"Bitte die Pflichtfelder ausfüllen.\" })\r\n        } else {\r\n            if (this.props.productID === 0) {\r\n                this.state.product_purchaseDate = this.formatPurchaseDate(this.state.product_purchaseDate);\r\n                this.props.add(this.state.product_name, this.state.product_amount, this.state.product_purchaseDate, this.state.product_expireDate, this.state.product_img_url);\r\n            }\r\n            this.setState({ redirect: true });\r\n            this.props.refreshPage();\r\n        }\r\n    }\r\n\r\n    formatPurchaseDate(string) {\r\n        var date = new Date(string);\r\n        var isoDate = date.toISOString().split('T')[0];\r\n        return isoDate;\r\n    }\r\n\r\n    async handleDateChange(event, id) {\r\n        const isoDate = event.toISOString().split('T')[0];\r\n        await this.setState({ [id]: isoDate });\r\n    }\r\n\r\n    handleInput(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.id]: value\r\n        })\r\n\r\n    }\r\n\r\n    handleClickUpdate(event) {\r\n        var product = {\r\n            name: this.state.product_name,\r\n            amount: this.state.product_amount,\r\n            purchaseDate: this.state.product_purchaseDate,\r\n            expireDate: this.state.product_expireDate\r\n        }\r\n        this.props.productUpdate(this.props.productID, product);\r\n        this.setState({ openSnackbar: true, message: \"Daten wurden geändert!\" })\r\n    }\r\n\r\n    onDetected(result) {\r\n        this.setState({\r\n            barcode: result,\r\n            camera: false,\r\n        })\r\n\r\n        this.getProductInformationByBarcode(this.state.barcode);\r\n    }\r\n\r\n    onStartScan() {\r\n        this.setState({\r\n            camera: !this.state.camera\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.toolbar} />\r\n                <div className={classes.img} style={this.state.imgStyle}>\r\n                    <div className={classes.imgOverlay}>\r\n                        <ArrowIcon\r\n                            edge=\"end\"\r\n                            className={classes.arrowIcon}\r\n                            onClick={this.handleClickArrow}\r\n                        />\r\n                        {this.props.productID !== 0 && <DeleteIcon\r\n                            edge=\"end\"\r\n                            className={classes.deleteIcon}\r\n                            onClick={this.handleClickDelete}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <form className={classes.form}>\r\n                        {this.props.productID === 0 && <div>\r\n                            <TextField\r\n                                id=\"barcode\"\r\n                                label=\"Barcode\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                value={this.state.barcode}\r\n                                className={classes.textField}\r\n                                onChange={this.handleInput}\r\n                                onKeyDown={this.onSearchKeyDown}\r\n                                onBlur={this.onFocusOut}\r\n\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <BarcodeIcon\r\n                                                className={classes.barcodeIcon}\r\n                                                onClick={this.onStartScan}\r\n                                            />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n\r\n                            <div className=\"container\">\r\n                                {this.state.camera && <Scanner onDetected={this.onDetected} cameraStatus={this.state.camera} />}\r\n                            </div>\r\n\r\n                        </div>}\r\n\r\n                        <TextField\r\n                            required\r\n                            id=\"product_name\"\r\n                            label=\"Titel\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.product_name}\r\n                            className={classes.textField}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                        <br />\r\n                        <FormControl variant=\"outlined\" margin=\"dense\" required className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"product_amount\">Anzahl</InputLabel>\r\n                            <Select\r\n                                native\r\n                                value={this.state.product_amount}\r\n                                onChange={this.handleInput}\r\n                                label=\"Anzahl\"\r\n                                inputProps={{\r\n                                    name: 'Anzahl',\r\n                                    id: 'product_amount',\r\n                                }}\r\n                            >\r\n                                <option aria-label=\"None\" value={1}>1</option>\r\n                                <option value={2}>2</option>\r\n                                <option value={3}>3</option>\r\n                                <option value={4}>4</option>\r\n                                <option value={5}>5</option>\r\n                                <option value={6}>6</option>\r\n                                <option value={7}>7</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <DatePicker\r\n                                required\r\n                                id=\"product_purchaseDate\"\r\n                                label=\"Eingekauft am\"\r\n                                margin=\"dense\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"dd.MM.yyyy\"\r\n                                value={this.state.product_purchaseDate}\r\n                                className={classes.datePicker}\r\n                                onChange={(event) => this.handleDateChange(event, \"product_purchaseDate\")}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <DatePicker\r\n                                required\r\n                                id=\"product_expireDate\"\r\n                                label=\"Gültig bis\"\r\n                                margin=\"dense\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"dd.MM.yyyy\"\r\n                                value={this.state.product_expireDate}\r\n                                className={classes.datePicker}\r\n                                onChange={(event) => this.handleDateChange(event, \"product_expireDate\")}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <br />\r\n\r\n                        {this.props.productID === 0 && <Button\r\n                            id=\"SaveButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.handleClickSave}>\r\n                            Speichern\r\n                        </Button>}\r\n\r\n                        {this.props.productID !== 0 && <Button\r\n                            id=\"UpdateButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.handleClickUpdate}>\r\n                            Ändern\r\n                        </Button>}\r\n                    </form>\r\n                </div>\r\n\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    open={this.state.openSnackbar}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    message={this.state.message}\r\n                    action={\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleCloseSnackbar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddProduct);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(4),\r\n    },\r\n});\r\n\r\nclass FloatingButton extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Link to=\"/Xpire/Product\">\r\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FloatingButton);","import React from 'react';\r\nimport AppHeader from './components/AppHeader'\r\nimport ProductsList from './components/ProductsList';\r\nimport AddProduct from './components/AddProduct';\r\nimport FloatingButton from './components/FloatingButton';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.productListComponentRef = React.createRef()\r\n\r\n    this.state = {\r\n      products: [],\r\n      productID: 0,\r\n      open: true\r\n    }\r\n    this.showProduct = this.showProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n    this.addProductToList = this.addProductToList.bind(this);\r\n    this.updateProduct = this.updateProduct.bind(this);\r\n    this.refreshPage = this.refreshPage.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const fetch = async () => {\r\n      await getAllProducts().then((arr) => {\r\n        this.setState({ products: arr });\r\n      })\r\n    }\r\n    fetch();\r\n  }\r\n\r\n  refreshPage() {\r\n    this.setState({ productID: 0 });\r\n    this.componentDidMount();\r\n  }\r\n\r\n  showProduct(id) {\r\n    this.setState({ productID: id });\r\n  }\r\n\r\n  deleteProduct = async (id) => {\r\n    await deleteProductById(id)\r\n  }\r\n\r\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\r\n    let productID\r\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\r\n      this.setState({ products: arr });\r\n      productID = arr[arr.length - 1].id\r\n    })\r\n    \r\n    var dateForAlarm = new Date(expireDate)\r\n    dateForAlarm.setDate(dateForAlarm.getDate() - 1);\r\n    dateForAlarm.setHours(9, 0, 0, 0); // 9 o'clock on the day before expiration\r\n    this.scheduleNotification(name + \" läuft morgen ab!\", \"expireAlert:\" + productID, dateForAlarm.getTime());\r\n  }\r\n\r\n  updateProduct = async (id, product) => {\r\n    await updateProductById(id, product).then((arr) => {\r\n      this.setState({ products: arr });\r\n    })\r\n  }\r\n  scheduleNotification = (text, id, timestamp) => {\r\n    if (Notification.permission === \"granted\") {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        if (\"showTrigger\" in Notification.prototype) { //origin trial feature\r\n          //Notification Trigger feature is supported\r\n          registration.showNotification('Xpire - manage your fridge and get rich', {\r\n            body: text,\r\n            tag: id,\r\n            icon: '/Xpire/static/media/logo.3fb9c233.svg',\r\n            actions: [\r\n              { action: 'show', title: 'Anzeigen' },\r\n              { action: 'remind', title: 'Erinnern' }\r\n            ], // Improvement: event listener for onclick must be added somehow\r\n            showTrigger: new TimestampTrigger(timestamp) // eslint-disable-line no-undef\r\n          });\r\n        } else {\r\n          console.log(\"Notification Triggers not supported\")\r\n          registration.showNotification('Xpire - manage your fridge and get rich', {\r\n            body: 'Your Browser doesnt support scheduled notifications',\r\n            tag: 'no-support',\r\n            icon: 'logo.png'\r\n          });\r\n        }\r\n      })\r\n        .then(console.log(\"Notification sent\"))\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      this.displayAlert(\"Please allow Notifications or exit Incognito Mode\");\r\n    }\r\n  }\r\n  displayAlert = (text) => {\r\n    this.productListComponentRef.current.setState({\r\n      alertOpen: true,\r\n      alertText: text\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route path=\"/Xpire\" render={(props => <AppHeader refreshPage={this.refreshPage}></AppHeader>)} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList ref={this.productListComponentRef} products={this.state.products} showProduct={this.showProduct} />} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\r\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct productID={this.state.productID}\r\n            products={this.state.products}\r\n            refreshPage={this.refreshPage}\r\n            add={this.addProductToList}\r\n            delete={this.deleteProduct}\r\n            productUpdate={this.updateProduct} />}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Color theme for whole app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n     primary: {\r\n        main: '#C9DEBC',\r\n     },\r\n     secondary: {\r\n       main: '#F96523',\r\n     },\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nif ('serviceWorker' in navigator && \"Notification\" in window) {\r\n  \r\n  navigator.serviceWorker.register('service-worker.js').then(function(registration) {\r\n    console.log(\"service worker registered\");\r\n    Notification.requestPermission(result => {\r\n      if (result === 'granted') {\r\n        console.log(\"Granted\")\r\n      } else {\r\n        console.log(result)\r\n      }\r\n    });\r\n  }).catch(function(error) {\r\n    console.log(error)\r\n  });\r\n} else {\r\n  // Der verwendete Browser unterstützt Service Worker nicht.\r\n  var aElement = document.createElement('a');\r\n  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';\r\n  aElement.textContent = 'unavailable';\r\n  document.querySelector('#status').appendChild(aElement);\r\n}"],"sourceRoot":""}